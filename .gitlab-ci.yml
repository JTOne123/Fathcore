image: microsoft/dotnet:latest

stages:
  - build
  - test
  - deploy
  
before_script:
  - dotnet restore
  - which coverlet || dotnet tool install --global coverlet.console

build:
  stage: build
  script:
    - dotnet build
  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - "artifacts/bin"
      - "artifacts/obj"
    expire_in: 20 minutes

test:
  stage: test
  script:
    - dotnet test
    - coverlet ./artifacts/bin/Fathcore.Tests/Debug/netcoreapp2.2/Fathcore.Tests.dll --target "dotnet" --targetargs "test --no-build" --exclude "[xunit*]*" --output ./artifacts/TestResults/ --format lcov --format opencover --format cobertura
    - coverlet ./artifacts/bin/Fathcore.Extensions.Tests/Debug/netcoreapp2.2/Fathcore.Extensions.Tests.dll --target "dotnet" --targetargs "test --no-build" --exclude "[xunit*]*" --merge-with "./artifacts/TestResults/coverage.json" --output ./artifacts/TestResults/ --format lcov --format opencover --format cobertura
  dependencies:
    - build
  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - "artifacts/bin"
      - "artifacts/obj"
      - "artifacts/TestResults/"
    expire_in: 20 minutes
    
deploy:coverage:
  stage: deploy
  script:
    - curl -s https://codecov.io/bash > codecov
    - chmod +x codecov
    - ./codecov -f "coverage.opencover.xml" -t $CODECOV_TOKEN
  dependencies:
    - test

deploy:
  stage: deploy
  script:
    - dotnet pack -c Release
  dependencies:
    - test
  when: manual
  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - "artifacts/packages/Release/Shipping"
    expire_in: 1d
    when: on_success
